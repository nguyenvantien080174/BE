

name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and test
        run: |
          docker build -t vantien8105 -f rsc/Dockerfile .
          docker run vantien8105 npm test

      - name: Push image to Docker Hub
        uses: docker/build-push-action@v2
        # Sử dụng action "docker/build-push-action" để đẩy image lên Docker Hub
        with:
          context: .
          push: true
          tags: vantien8105/vantien8105:latest
          file: ./rsc/Dockerfile
  # Job 2: Deploy
  deploy:
    needs: build_and_test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to server
        run: |
          echo "$SSH_PRIVATE_KEY" > /tmp/id_rsa
          chmod 600 /tmp/id_rsa
          ssh -i /tmp/id_rsa -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} << 'EOF'
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/vantien8105:latest
          sudo docker stop ubuntu-vantien8105-1 || true
          sudo docker rm ubuntu-vantien8105-1 || true
          sudo docker run -d -p 3000:3000 --name ubuntu-vantien8105-1 --network ubuntu_default \
            -e DB_HOST=db \
            -e DB_PORT=3306 \
            -e DB_USER=${{ secrets.DB_USERNAME }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e DB_DATABASE=${{ secrets.DB_DATABASE }} \
            -e ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }} \
            -e SMTP_HOST=${{ secrets.SMTP_HOST }} \
            -e SMTP_PORT=${{ secrets.SMTP_PORT }} \
            -e SMTP_USER=${{ secrets.SMTP_USER }} \
            -e SMTP_PASS=${{ secrets.SMTP_PASS }} \
            ${{ secrets.DOCKERHUB_USERNAME }}/vantien8105:latest
          EOF
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      # - name: Deploy to server
      #  # Sử dụng action "appleboy/ssh-action" để triển khai image lên server thông qua SSH
      #   uses: appleboy/ssh-action@v0.1.3
      #   with:
      #     host: ${{ secrets.SERVER_HOST }}
      #     username: ${{ secrets.SERVER_USER }}
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     script: |
      #       # Pull image mà được push lên DockerHub bên trên
      #       docker pull ${{ secrets.DOCKERHUB_USERNAME }}/reactjs-basic:${{ commit }}

      #       # Dừng và gỡ bỏ container hiện tại (nếu có)
      #       docker stop reactjs-container
      #       docker rm reactjs-container 

      #       # Chạy container mới với image đã pull về bên trên
      #       docker run -d -p 3000:3000 --name reactjs-container ${{ secrets.DOCKERHUB_USERNAME }}/reactjs-basic:${{ "commit"}}


